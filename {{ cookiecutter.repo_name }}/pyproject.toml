[project]
name = "{{ cookiecutter.project_name.lower().replace(' ', '_') }}"
version = "0.1.0"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }}"]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.26.1",
    "pandas>=2.1.1",
    "matplotlib>=3.8.0",
    "scikit-learn>=1.3.1",
    "loguru>=0.7.2",
    "tqdm>=4.66.1",
    "transformers[torch]>=4.34.0",
    # "einops>=0.7.0",
    # "loguru>=0.7.2",
    # "simple-parsing>=0.1.4",
    # "torch >=2.1.0+cu124",
    # "lightning>=2.1.0",
    # "torchinfo>=1.8.0",
    # "peft>=0.5.0",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "ruff>=0.8.3",
]

# # if we use flash attention it's easier to install it afterwards, and it needs no build isolation
# flash = [
#     "flash-attn>=2.7.4",
# ]

# [tool.uv]
# no-build-isolation-package = ["flash-attn"]

[tool.uv.sources]
baukit = { git = "https://github.com/davidbau/baukit.git" }


# now there are many build systems we could use, the most compatible is setuptools. This works better with `pip install git+URL` from other tools like pip, poetry, etc
[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]  # search the root directory
include = [""{{ cookiecutter.project_name.lower().replace(' ', '_') }}"*"]

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

#[tool.hatch.build.targets.wheel]
# packages = ["reprpo"]

# [build-system]
# requires = ["flit_core>=3.2,<4"]
# build-backend = "flit_core.buildapi"

